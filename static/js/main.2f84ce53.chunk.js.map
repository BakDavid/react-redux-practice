{"version":3,"sources":["App.js","actions/index.js","reducers/index.js","reducers/counter.js","reducers/isLogged.js","index.js"],"names":["App","counter","useSelector","state","counterReducer","isLogged","loggedReducer","dispatch","useDispatch","className","onClick","type","payload","allReducers","combineReducers","action","store","createStore","allReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAoBeA,MAhBf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,kBACrCC,EAAWH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,iBACtCC,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,0CAAaR,KACb,wBAAQS,QAAS,kBAAMH,ECVrB,CACJI,KAAM,YACNC,QDQ4C,KAA1C,eACA,wBAAQF,QAAS,kBAAMH,ECJrB,CACJI,KAAM,eDGJ,eACA,wBAAQD,QAAS,kBAAMH,ECCrB,CACJI,KAAM,aDFJ,kCAECN,EAAW,kEAA4C,O,OEX9D,IAAMQ,EAAcC,YAAgB,CAClCV,eCLa,WAA4C,IAApBD,EAAmB,uDAAX,EAAGY,EAAQ,uCACxD,OAAOA,EAAOJ,MACZ,IAAK,YACH,OAAOR,EAAQY,EAAOH,QACxB,IAAK,YACH,OAAOT,EAAQ,EACjB,QACE,OAAOA,IDDXG,cENa,WAA+C,IAAxBH,EAAuB,wDAARY,EAAQ,uCAC3D,MACO,YADAA,EAAOJ,MAEFR,EAEDA,KFIEU,IGDTG,EAAQC,YAAYC,EAAWC,OAAOC,8BAAgCD,OAAOC,gCAEnFC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.2f84ce53.chunk.js","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {decrement, increment, log} from \"./actions\";\n\nfunction App() {\n  const counter = useSelector(state => state.counterReducer);\n  const isLogged = useSelector(state => state.loggedReducer);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n      <h1>Counter {counter}</h1>\n      <button onClick={() => dispatch(increment(5))}>+</button>\n      <button onClick={() => dispatch(decrement())}>-</button>\n      <button onClick={() => dispatch(log())}>Logged status change</button>\n\n      {isLogged ? <h3>Only logged in user can see this</h3> : ''}\n    </div>\n  );\n}\n\nexport default App;\n","export const increment = (nr) => {\r\n  return{\r\n    type: 'INCREMENT',\r\n    payload: nr\r\n  };\r\n}\r\n\r\nexport const decrement = () => {\r\n  return{\r\n    type: 'DECREMENT'\r\n  };\r\n}\r\n\r\nexport const log = () => {\r\n  return{\r\n    type: 'SIGN_IN'\r\n  };\r\n}","import counterReducer from './counter';\r\nimport loggedReducer from './isLogged';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers({\r\n  counterReducer,\r\n  loggedReducer\r\n});\r\n\r\nexport default allReducers","export default function counterReducer(state = 0, action) {\r\n  switch(action.type){\r\n    case 'INCREMENT':\r\n      return state + action.payload\r\n    case 'DECREMENT':\r\n      return state - 1\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export default function loggedReducer(state = false, action) {\r\n  switch(action.type){\r\n    case 'SIGN_IN':\r\n      return !state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from 'redux';\nimport allReducer from './reducers';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(allReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}